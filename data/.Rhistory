sd(S3pH2024$Value)
#pH for Site 4
S4pH2018 <- filter(pH, Year == "2018" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
#pH for Site 3
S3pH2018 <- filter(pH, Year == "2018" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F")
S3pH2020 <- filter(pH, Year == "2020" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F")
S3pH2022 <- filter(pH, Year == "2022" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F")
S3pH2024 <- filter(pH, Year == "2024" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F")
mean(S3pH2018$Value)
sd(S3pH2018$Value)
mean(S3pH2020$Value)
sd(S3pH2020$Value)
mean(S3pH2022$Value)
sd(S3pH2022$Value)
mean(S3pH2024$Value)
sd(S3pH2024$Value)
#pH for Site 4
S4pH2018 <- filter(pH, Year == "2018" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
S4pH2020 <- filter(pH, Year == "2020" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
S4pH2022 <- filter(pH, Year == "2022" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
S4pH2024 <- filter(pH, Year == "2024" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
mean(S4pH2018$Value)
sd(pH2018$Value)
mean(pH2020$Value)
sd(pH2020$Value)
mean(pH2022$Value)
sd(pH2022$Value)
mean(pH2024$Value)
sd(pH2024$Value)
pHmeanSD <- read.csv("C:/Users/Owner/Documents/ECOL417FinalProjpHmeanSD.csv", header = T)
pHmeanSD
library(ggplot2)
ggplot(pHmeanSD, aes(x = Year, y = Mean, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean pH") +
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width = .2) +
scale_color_manual(values = c("3" = "purple",
"4"="blue") )
ggplot(pHmeanSD, aes(x = Year, y = Mean, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean pH") +
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width = .2) +
scale_color_manual(values = c("3" = "purple",
"4"="blue") )
ggplot(pHmeanSD, aes(x = Year, y = Mean, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean pH") +
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width = .2)
phmeanSD$Site <- as.factor(phmeanSD$Site)
pHmeanSD$Site <- as.factor(pHmeanSD$Site)
ggplot(pHmeanSD, aes(x = Year, y = Mean, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean pH") +
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width = .2) +
scale_color_manual(values = c("3" = "purple",
"4"="blue") )
#Total Phosphorus for Site 3
S3TP2018 <- filter(TP, Year == "2018" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F")
S3TP2020 <- filter(TP, Year == "2020" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F")
S3TP2022 <- filter(TP, Year == "2022" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F")
S3TP2024 <- filter(TP, Year == "2024" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F")
mean(S3TP2018$Value)
sd(S3TP2018$Value)
mean(S3TP2020$Value)
sd(S3TP2020$Value)
mean(S3TP2022$Value)
sd(S3TP2022$Value)
mean(S3TP2024$Value)
sd(S3TP2024$Value)
#Total Phosphorus for Site 4
S4TP2018 <- filter(Tp, Year == "2018" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
S4TP2020 <- filter(TP, Year == "2020" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
#Total Phosphorus for Site 4
S4TP2018 <- filter(TP, Year == "2018" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
S4TP2020 <- filter(TP, Year == "2020" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
S4TP2022 <- filter(TP, Year == "2022" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
S4TP2024 <- filter(TP, Year == "2024" & Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F")
mean(S4TP2018$Value)
sd(S4TP2018$Value)
mean(S4TP2020$Value)
sd(S4TP2020$Value)
mean(S4TP2022$Value)
sd(S4TP2022$Value)
mean(S4TP2024$Value)
sd(S4TP2024$Value)
TPmeanSD <- read.csv("C:/Users/Owner/Documents/ECOL417FinalProjTPMeanSD.csv", header = T)
ggplot(TPMeanSD, aes(x = Year, y = Mean, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean Total Phosphorus (mg/L)") +
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width = .2) +
scale_color_manual(values = c("3" = "purple",
"4"="blue") )
ggplot(TPmeanSD, aes(x = Year, y = Mean, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean Total Phosphorus (mg/L)") +
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width = .2) +
scale_color_manual(values = c("3" = "purple",
"4"="blue") )
TPmeanSD$Site <- as.factor(TPmeanSD$Site)
ggplot(TPmeanSD, aes(x = Year, y = Mean, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean Total Phosphorus (mg/L)") +
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width = .2) +
scale_color_manual(values = c("3" = "purple",
"4"="blue") )
##ECOL 417 Final Project Data Analysis##
rm(list=ls(all=T))
#load libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
#import csv with habitat data
habitat <- read.csv("C:/Users/Owner/Downloads/Habitat.csv", header = T)
habitat
#filter habitat data according to abiotic variables of interest (total phosphorus, pH, electrical conductivity)
TP <- filter(habitat, Variable == "Phosphorus-TP") #32 replicates
pH <- filter(habitat, Variable == "General-pH") #33 replicates
EC <- filter(habitat, Variable == "General-SpCond") #22 replicates
#import csv with benthic data
benthic <- read.csv("C:/Users/Owner/Downloads/Benthic.csv", header = T)
benthic
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
S4benthic <- filter(benthic, Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F") %>%
mutate_all(~replace(., is.na(.), 0))
#remove columns not needed
S3benthic
S3benthic[1:3] <- list(NULL)
S3benthic[1:26]<- list(NULL)
S4benthic
S4benthic[1:3] <- list(NULL)
S4benthic[1:26]<- list(NULL)
S3benthic
colnames(S3benthic)
names(S3benthic) <- S3benthic
S4benthic
colnames(S4benthic)
#sum species at each site, get proportion of each species at each site
df$sum <- apply(S3benthic [,(Aeshnidae:Uenoidae)], 1, sum)
names(S3benthic) <- S3benthic[1,]
S3benthic <- S3benthic[-1,]
S3benthic
S3benthic
colnames(S3benthic)
S3benthic
#remove columns not needed
S3benthic
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
#remove columns not needed
S3benthic
S3benthic[1:3] <- list(NULL)
S3benthic[1:26]<- list(NULL)
S4benthic
colnames(S3benthic)
names(S3benthic) <- S3benthic
names(S3benthic) <- S3benthic[1,]
colnames(S3benthic)
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
#remove columns not needed
S3benthic
S3benthic[1:3] <- list(NULL)
S3benthic[1:26]<- list(NULL)
S3benthic
colnames(S3benthic)
rowSums(S3benthic[,c("Aeshnidae":"Uenoidae")], na.rm=T)
rowSums(S3benthic[,c("Aeshnidae":"Uenoidae")], na.rm=F)
df$sum <- rowSums(S3benthic[,c("Aeshnidae":"Uenoidae")])
df$sum
S3benthic$sum <- rowSums(S3benthic[,c("Aeshnidae":"Uenoidae")])
S3benthic$sum
S3benthic <- S3benthic[-c(1)]
S3benthic
S3benthic$sum <- rowSums(S3benthic[,c("Aeshnidae":"Uenoidae")])
S3benthic <- S3benthic[-c(1),]
S3benthic
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
#remove columns not needed
S3benthic
S3benthic[1:3] <- list(NULL)
S3benthic[1:26]<- list(NULL)
#remove columns not needed
S3benthic
names(S3benthic) <- S3benthic[1,]
S3benthic
colnames(S3benthic)
S3benthic$sum <- rowSums(S3benthic[,c(1:78)])
S3benthic$sum
S3benthic$sum <- rowSums(S3benthic[,c(2:78)])
S3benthic$sum
##ECOL 417 Final Project Data Analysis##
rm(list=ls(all=T))
#load libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
#import csv with habitat data
habitat <- read.csv("C:/Users/Owner/Downloads/Habitat.csv", header = T)
habitat
#filter habitat data according to abiotic variables of interest (total phosphorus, pH, electrical conductivity)
TP <- filter(habitat, Variable == "Phosphorus-TP") #32 replicates
pH <- filter(habitat, Variable == "General-pH") #33 replicates
EC <- filter(habitat, Variable == "General-SpCond") #22 replicates
#import csv with benthic data
benthic <- read.csv("C:/Users/Owner/Downloads/Benthic.csv", header = T)
benthic
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
S4benthic <- filter(benthic, Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F") %>%
mutate_all(~replace(., is.na(.), 0))
#remove columns not needed
S3benthic
S3benthic[1:3] <- list(NULL)
S3benthic[1:26]<- list(NULL)
S4benthic
S4benthic[1:3] <- list(NULL)
S4benthic[1:26]<- list(NULL)
S3benthic
colnames(S3benthic)
names(S3benthic) <- S3benthic[1,]
S3benthic$sum <- colSums(S3benthic[,c(2:78)])
Sum <- colSums(S3benthic[,c(2:78)])
Sum
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
S4benthic <- filter(benthic, Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F") %>%
mutate_all(~replace(., is.na(.), 0))
#remove columns not needed
S3benthic
S3benthic[1:3] <- list(NULL)
S3benthic[1:26]<- list(NULL)
S3benthic
colnames(S3benthic)
Sum <- colSums(S3benthic[,c(2:78)])
S4benthic
Sum
Sum <- colSums(S4benthic[,c(2:78)])
colnames(S4benthic)
Sum <- colSums(S4benthic[,c(2:78)])
S4benthic
library(vegan)
Sum <- colSums(S4benthic[,c(2:78)])
S4benthic
S4benthic[1:3] <- list(NULL)
S4benthic[1:26]<- list(NULL)
S4benthic
colnames(S4benthic)
Sum <- colSums(S4benthic[,c(2:78)])
SumS3inverts <- colSums(S3benthic[,c(2:78)])
SumS4inverts <- colSums(S4benthic[,c(2:78)])
SumS3inverts
totalSumS3 <- rowSums(SumS3inverts[, c(1:77)])
totalSumS3 <- rowSums(SumS3inverts[, c("Aeshnidae":"Uenoidae")])
totalSumS3 <- rowSums(SumS3inverts[, c(Aeshnidae:Uenoidae)])
totalSumS3 <- rowSums(SumS3inverts[c(1:77),])
SumS3inverts <- colSums(S3benthic[,c(2:78)]) %>%
S3benthic[-c(1), ]
#sum species at each site, get proportion of each species at each site
S3inverts$Sum <- colSums(S3benthic[,c(2:78)])
#sum species at each site, get proportion of each species at each site
S3inverts <- S3inverts$Sum <- colSums(S3benthic[,c(2:78)])
#sum species at each site, import new csv with proportion of each species at each site
SumS3inverts <- colSums(S3benthic[,c(2:78)])
SumS3inverts
S3benthic
S3SDI <- read.csv("C:/Users/Owner/Documents/S3invertProp.csv", header = T)
S3SDI
##ECOL 417 Final Project Data Analysis##
rm(list=ls(all=T))
#load libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
#import csv with habitat data
habitat <- read.csv("C:/Users/Owner/Downloads/Habitat.csv", header = T)
habitat
#filter habitat data according to abiotic variables of interest (total phosphorus, pH, electrical conductivity)
TP <- filter(habitat, Variable == "Phosphorus-TP") #32 replicates
pH <- filter(habitat, Variable == "General-pH") #33 replicates
EC <- filter(habitat, Variable == "General-SpCond") #22 replicates
#import csv with benthic data
benthic <- read.csv("C:/Users/Owner/Downloads/Benthic.csv", header = T)
benthic
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
S4benthic <- filter(benthic, Site == "ELB04A" | Site == "ELB04B"| Site == "ELB04C"| Site == "ELB04D"| Site == "ELB04E"| Site == "ELB04F") %>%
mutate_all(~replace(., is.na(.), 0))
#import csv with benthic data
benthic <- read.csv("C:/Users/Owner/Downloads/Benthic.csv", header = T)
benthic
S32018 <- filter(benthic, Year == "2018" &Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
S32018
write.csv(S32018, "2018site3")
write.csv(S32018, "C:/Users/Owner/Documents/2018site3.csv")
#for excel
S32018 <- filter(benthic, Year == "2018" &Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
S32018
#for excel
S32018 <- filter(benthic, Year == "2018" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
S32018
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
S3benthic
#for excel
S32018 <- filter(benthic, Year == "2018" & Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
S32018
#filter benthic data into each site (3 or 4)
S3benthic <- filter(benthic, Site == "ELB03A" | Site == "ELB03B"| Site == "ELB03C"| Site == "ELB03D"| Site == "ELB03E"| Site == "ELB03F") %>%
mutate_all(~replace(., is.na(.), 0))
write.csv(site3, "C:/Users/Owner/Documents/site3.csv")
write.csv(S3benthic, "C:/Users/Owner/Documents/site3.csv")
write.csv(S4benthic, "C:/Users/Owner/Documents/site4.csv")
SDI <- read.csv("C:/Users/Owner/Documents/ShannonDiversity.csv", header = T)
SDI
SDI <- read.csv("C:/Users/Owner/Documents/ShannonDiversity.csv", header = T)
SDI
##set wd to the folder with all your csv's in it
setwd("C:/Users/Owner/Documents/Gestation 2/gestation/data")
options(scipen=999, dplyr.width = Inf, tibble.print_min = 50, repos='http://cran.rstudio.com/') #scipen forces outputs to not be in scientific notation #dplyr.width will show all columns for head() function and tibble.print_min sets how many rows are printed and repos sets the cran mirror
#load libraries
pacman::p_load(
dplyr,
lubridate,
tidyverse,
data.table,
lme4,
krsp,
sjPlot,
sjlabelled,
sjmisc,
scales,
ggplot2,
ggeffects
)
select<-dplyr::select
filter<-dplyr::filter
#conserved theme across plots for plots
#general theme
theme_squirrel <-
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=15), #changes size of axes #s
axis.title=element_text(size=15), #changes size of axes labels
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 15))
#dot-whisker plot theme
theme_squirrel_dot <-
theme_bw() +
theme(plot.margin = margin(0, 0.5, 0, 0, "cm"),
axis.line=element_line(),
axis.line.y=element_blank(),
axis.ticks.length=unit(0.4, "cm"),
axis.ticks.y=element_blank(),
axis.text=element_text(size=10), #changes size of axes #s
axis.title=element_text(size=15), #changes size of axes labels
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 10))
#dataset we are using
gest<-read.csv("final_dataset.csv", header=T)
gest
#stats for gestation length at each age (yearlings through 7 years old)
mom_age <- gest %>%
group_by(gestation_age) %>%
mutate(avg=mean(gestation_days),
min=min(gestation_days),
max=max(gestation_days),
med=median(gestation_days),
sd=sd(gestation_days)) %>%
filter(row_number()==1) %>%
arrange(gestation_age)
mom_age %>% select(gestation_age, avg, sd, min, max, med)
gest %>% filter(gestation_age>6)
#to get female sample size at each age
gest %>% filter(gestation_age==1)  %>% as_tibble() %>% count(squirrel_id) %>% nrow() #19 females
gest %>% filter(gestation_age==2)  %>% as_tibble() %>% count(squirrel_id) %>% nrow() #56 females
gest %>% filter(gestation_age==3)  %>% as_tibble() %>% count(squirrel_id) %>% nrow() #42 females
gest %>% filter(gestation_age==4)  %>% as_tibble() %>% count(squirrel_id) %>% nrow() #22 females
gest %>% filter(gestation_age==5)  %>% as_tibble() %>% count(squirrel_id) %>% nrow() #23 females
gest %>% filter(gestation_age==6)  %>% as_tibble() %>% count(squirrel_id) %>% nrow() #10 females
gest %>% filter(gestation_age==7)  %>% as_tibble() %>% count(squirrel_id) %>% nrow() #2 females
final_df<-gest %>%
ungroup() %>%
group_by(grid) %>%
mutate(
mast=as.factor(mast),
gestation_age_sd=((gestation_age-mean(gestation_age))/(1*(sd(gestation_age)))),
gestation_age_sd = replace(gestation_age_sd, is.na(gestation_age_sd), 0),
gestation_age2_sd=((gestation_age2-mean(gestation_age2))/(1*(sd(gestation_age2)))),
gestation_age2_sd = replace(gestation_age2_sd, is.na(gestation_age2_sd), 0),
n_pups_sd=((n_pups-mean(n_pups, na.rm=T))/(1*(sd(n_pups, na.rm=T)))),
n_pups_sd = replace(n_pups_sd, is.na(n_pups_sd), 0),
litter_ratio_sd =((litter_ratio-mean(litter_ratio, na.rm=T))/(1*(sd(litter_ratio, na.rm=T)))),
litter_ratio_sd = replace(litter_ratio_sd, is.na(litter_ratio_sd), 0),
#can't standardize cone_index_tm1
year_sd=(year-1995)) %>%
ungroup()
summary(final_df)
#correlations
attach(final_df);tt=cbind(gestation_age, gestation_age2, litter_ratio, n_pups,  mast, cone_index_tm1)
cor(tt)
#mean > var, #good to use logistic regression
#if var > mean, then the data would be significantly overdispersed (variance > mean)
mean(final_df $gestation_days)
var(final_df $gestation_days)
#plot diversity as a function of TP
ggplot(SDI, aes(x = TP, y = SDI, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean Total Phosphorus (mg/L)") +
geom_errorbar(aes(ymin=TP-TPsd, ymax=TP+TPsd), width = .2) +
scale_color_manual(values = c("3" = "red",
"4"="blue") )
SDI$site <- as.factor(SDI$site)
SDI$Site <- as.factor(SDI$Site)
#plot diversity as a function of TP
ggplot(SDI, aes(x = TP, y = SDI, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean Total Phosphorus (mg/L)") +
geom_errorbar(aes(ymin=TP-TPsd, ymax=TP+TPsd), width = .2) +
scale_color_manual(values = c("3" = "red",
"4"="blue") )
#plot diversity as a function of TP
ggplot(SDI, aes(x = TP, y = SDI, color = Site)) +
geom_point(size = 5) +
labs(y = "Mean Total Phosphorus (mg/L)") +
scale_color_manual(values = c("3" = "red",
"4"="blue") )
#plot diversity as a function of TP
ggplot(SDI, aes(x = TP, y = SDI, color = Site)) +
geom_point(size = 5) +
labs(x = "Mean Total Phosphorus (mg/L)", y = "Shannon Diversity Index") +
scale_color_manual(values = c("3" = "red",
"4"="blue") )
#plot diversity as a function of TP
ggplot(SDI, aes(x = TP, y = SDI, color = Year)) +
geom_point(size = 5) +
labs(x = "Mean Total Phosphorus (mg/L)", y = "Shannon Diversity Index") +
scale_color_manual(values = c("3" = "red",
"4"="blue") )
SDI$Year <- as.factor(SDI$Year)
#plot diversity as a function of TP
ggplot(SDI, aes(x = TP, y = SDI, color = Year, shape = Site)) +
geom_point(size = 5) +
labs(x = "Mean Total Phosphorus (mg/L)", y = "Shannon Diversity Index") +
scale_color_manual(values = c("3" = "red",
"4"="blue") )
#plot diversity as a function of TP
ggplot(SDI, aes(x = TP, y = SDI, color = Year, shape = Site)) +
geom_point(size = 5) +
labs(x = "Mean Total Phosphorus (mg/L)", y = "Shannon Diversity Index") +
scale_color_manual(values = c("2018" = "red",
"2024"="blue") )
ggplot(SDI, aes(x = TP, y = SDI, color = Year, shape = Site)) +
geom_point(size = 5) +
labs(x = "Mean Total Phosphorus (mg/L)", y = "Shannon Diversity Index") +
scale_colour_manual(name = "Site & Year",
labels = c("Site 3, 2018", "Site 3, 2024", "Site 4, 2018", "Site 4, 2024"),
values = c("blue", "red", "blue", "red")) +
scale_shape_manual(name = "Site & Year",
labels = c("Site 3, 2018", "Site 3, 2024", "Site 4, 2018", "Site 4, 2024"),
values = c(19, 19, 17, 17))
#plot diversity as a function of TP
ggplot(SDI, aes(x = TP, y = SDI, color = Year, shape = Site)) +
geom_point(size = 5) +
labs(x = "Mean Total Phosphorus (mg/L)", y = "Shannon Diversity Index") +
scale_colour_manual(name = "Site & Year",
labels = c("Site 3, 2018", "Site 3, 2024", "Site 4, 2018", "Site 4, 2024"),
values = c("blue", "red", "blue", "red")) +
scale_shape_manual(name = "Site & Year",
labels = c("Site 3, 2018", "Site 3, 2024", "Site 4, 2018", "Site 4, 2024"),
values = c(5, 5, 19, 19))
ggplot(SDI, aes(x = TP, y = SDI, color = Year, shape = Site)) +
geom_point(size = 5) +
labs(x = "Mean Total Phosphorus (mg/L)", y = "Shannon Diversity Index") +
scale_colour_manual(name = "Site & Year",
labels = c("Site 3, 2018", "Site 3, 2024", "Site 4, 2018", "Site 4, 2024"),
values = c("blue", "red", "blue", "red")) +
scale_shape_manual(name = "Site & Year",
labels = c("Site 3, 2018", "Site 3, 2024", "Site 4, 2018", "Site 4, 2024"),
values = c(5, 5, 19, 19))
#plot diversity as a function of TP
ggplot(SDI, aes(x = TP, y = SDI, color = Year, shape = Site, group = Site)) +
geom_point(size = 5) +
labs(x = "Mean Total Phosphorus (mg/L)", y = "Shannon Diversity Index") +
scale_colour_manual(name = "Site & Year",
labels = c("Site 3, 2018", "Site 3, 2024", "Site 4, 2018", "Site 4, 2024"),
values = c("blue", "red", "blue", "red")) +
scale_shape_manual(name = "Site & Year",
labels = c("Site 3, 2018", "Site 3, 2024", "Site 4, 2018", "Site 4, 2024"),
values = c(5, 5, 19, 19))
